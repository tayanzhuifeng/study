<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd   
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd   
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-3.2.xsd   
        http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd   
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">  
    <!--配置数据库连接属性-->  
    <!--配置数据库连接属性加载db.properties的数据库连接信息文件 这里配置有很多学问，需要我以后学习-->  
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">  
        <property name="driverClassName" value="${jdbc.driver}"/>  
        <property name="url" value="${jdbc.url}"/>  
        <property name="username" value="${jdbc.username}"/>  
        <property name="password" value="${jdbc.password}"/>  
        <property name="maxActive" value="30"/>  
        <property name="maxIdle" value="5"/>  
    </bean>  
  
    <!-- 让spring管理sqlsessionfactory 使用mybatis和spring整合包中的 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <!--注入数据库连接对象-->  
        <property name="dataSource" ref="dataSource"/>  
        <!--加载mybatis配置文件 这里mybatis配置文件的工作都在spring中配置了所以mybatis只是配置别名就可以-->  
        <property name="configLocation" value="classpath:mybatis-config.xml"/>  
        
        <!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations">
            <list>
                <value>classpath:com/study/cache/guava/*/mapper/*.xml</value>
            </list>
        </property>
        
    </bean>  
    
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.study.cache.guava.*.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
    
    <!-- mapper扫描器 -->  
   <!--  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        扫描的包，如果要扫描多个，中间用,隔开  
        <property name="basePackage" value="com.ys.mybatis.mapper"></property>  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />  
    </bean> -->
    
    <!-- <bean id="userDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="com.ocean.dao.UserDao" />
	</bean>  -->
  
</beans> 